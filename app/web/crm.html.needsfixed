<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fleet Field Sales CRM</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .crm-container {
            display: flex;
            height: 100vh;
        }

        .sidebar {
            width: 250px;
            background: #2c3e50;
            color: white;
            padding: 20px 0;
        }

        .sidebar h2 {
            padding: 0 20px 20px;
            border-bottom: 1px solid #34495e;
            margin-bottom: 20px;
        }

        .nav-item {
            padding: 12px 20px;
            cursor: pointer;
            transition: background 0.2s;
            border-left: 3px solid transparent;
        }

        .nav-item:hover {
            background: #34495e;
        }

        .nav-item.active {
            background: #3498db;
            border-left-color: #2980b9;
        }

        .main-content {
            flex: 1;
            overflow-y: auto;
        }

        .header {
            background: white;
            padding: 20px;
            border-bottom: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .content-area {
            padding: 20px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #3498db;
        }

        .stat-label {
            color: #666;
            margin-top: 5px;
        }

        .data-table {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .table-header {
            background: #f8f9fa;
            padding: 15px 20px;
            border-bottom: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            margin: 2px;
        }

        .btn:hover {
            background: #2980b9;
        }

        .btn-success {
            background: #27ae60;
        }

        .btn-success:hover {
            background: #229954;
        }

        .btn-warning {
            background: #f39c12;
        }

        .btn-warning:hover {
            background: #e67e22;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        th {
            background: #f8f9fa;
            font-weight: 600;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-identified { background: #e3f2fd; color: #1976d2; }
        .status-assigned { background: #fff3e0; color: #f57c00; }
        .status-contacted { background: #e8f5e8; color: #388e3c; }
        .status-qualified { background: #f3e5f5; color: #7b1fa2; }
        .status-account-opened { background: #e8f5e8; color: #2e7d32; }
        .status-first-sale { background: #c8e6c9; color: #1b5e20; }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .form-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 20px;
        }

        .tsm-card {
            background: white;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 15px;
            border-left: 4px solid #3498db;
        }

        .filters {
            background: white;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            gap: 15px;
            align-items: center;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div class="crm-container">
        <div class="sidebar">
            <h2>ðŸš› Field Sales CRM</h2>
            <div class="nav-item active" onclick="showSection('dashboard')">Dashboard</div>
            <div class="nav-item" onclick="showSection('prospects')">Prospect Pool</div>
            <div class="nav-item" onclick="showSection('activities')">Field Activities</div>
            <div class="nav-item" onclick="showSection('finder')">Prospect Finder</div>
        </div>

        <div class="main-content">
            <!-- Dashboard Section -->
            <div id="dashboard-section" class="content-section">
                <div class="header">
                    <h1>Field Sales Dashboard</h1>
                    <button class="btn" onclick="refreshDashboard()">Refresh</button>
                </div>
                <div class="content-area">
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-number" id="total-prospects">0</div>
                            <div class="stat-label">Total Prospects</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" id="assigned-prospects">0</div>
                            <div class="stat-label">Assigned to TSMs</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" id="contact-rate">0%</div>
                            <div class="stat-label">Contact Rate</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" id="accounts-opened">0</div>
                            <div class="stat-label">Accounts Opened</div>
                        </div>
                    </div>

                    <div class="data-table">
                        <div class="table-header">
                            <h3>TSM Performance Summary</h3>
                        </div>
                        <div id="tsm-performance-summary"></div>
                    </div>
                </div>
            </div>

            <!-- Prospects Section -->
            <div id="prospects-section" class="content-section hidden">
                <div class="header">
                    <h1>Prospect Pool</h1>
                    <div>
                        <button class="btn btn-success" onclick="openModal('add-prospect-modal')">Add Prospect</button>
                        <button class="btn btn-warning" onclick="openModal('assign-prospects-modal')">Assign to TSM</button>
                    </div>
                </div>
                <div class="content-area">
                    <div class="filters">
                        <select id="status-filter" onchange="filterProspects()">
                            <option value="">All Statuses</option>
                            <option value="identified">Identified</option>
                            <option value="assigned">Assigned</option>
                            <option value="contacted">Contacted</option>
                            <option value="qualified">Qualified</option>
                        </select>
                        <input type="text" id="search-prospects" placeholder="Search prospects..." onkeyup="filterProspects()">
                    </div>

                    <div class="data-table">
                        <div class="table-header">
                            <h3>Prospect List</h3>
                            <button class="btn" onclick="loadProspects()">Refresh</button>
                        </div>
                        <table>
                            <thead>
                                <tr>
                                    <th><input type="checkbox" id="select-all-prospects" onchange="toggleAllProspects()"></th>
                                    <th>Business Name</th>
                                    <th>Location</th>
                                    <th>Category</th>
                                    <th>Status</th>
                                    <th>TSM</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="prospects-tbody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Activities Section -->
            <div id="activities-section" class="content-section hidden">
                <div class="header">
                    <h1>Field Activities</h1>
                    <button class="btn btn-success" onclick="openModal('log-visit-modal')">Log Visit</button>
                </div>
                <div class="content-area">
                    <div id="activities-list">
                        <p>Field activities will be displayed here</p>
                    </div>
                </div>
            </div>

            <!-- Finder Section -->
            <div id="finder-section" class="content-section hidden">
                <div class="header">
                    <h1>Prospect Finder</h1>
                    <button class="btn" onclick="showSection('prospects')">Back to CRM</button>
                </div>
                <div class="content-area">
                    <p><a href="/" class="btn">Open Prospect Finder Tool</a></p>
                    <p>Use the main Prospect Finder tool to search for businesses, then import them here.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Modals -->
    <div id="add-prospect-modal" class="modal">
        <div class="modal-content">
            <h3>Add New Prospect</h3>
            <form id="add-prospect-form">
                <div class="form-group">
                    <label>Business Name *</label>
                    <input type="text" name="business_name" required>
                </div>
                <div class="form-group">
                    <label>Address *</label>
                    <input type="text" name="address" required>
                </div>
                <div class="form-group">
                    <label>City *</label>
                    <input type="text" name="city" required>
                </div>
                <div class="form-group">
                    <label>State *</label>
                    <input type="text" name="state" required>
                </div>
                <div class="form-group">
                    <label>ZIP Code *</label>
                    <input type="text" name="zip_code" required>
                </div>
                <div class="form-group">
                    <label>Category *</label>
                    <select name="category" required>
                        <option value="Automotive & Fleet Core">Automotive & Fleet Core</option>
                        <option value="Home / Field Services">Home / Field Services</option>
                        <option value="Logistics / Mobility">Logistics / Mobility</option>
                        <option value="Industrial / Construction Ops">Industrial / Construction Ops</option>
                    </select>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn" onclick="closeModal('add-prospect-modal')">Cancel</button>
                    <button type="submit" class="btn btn-success">Save Prospect</button>
                </div>
            </form>
        </div>
    </div>

    <div id="assign-prospects-modal" class="modal">
        <div class="modal-content">
            <h3>Assign Prospects to TSM</h3>
            <form id="assign-prospects-form">
                <div class="form-group">
                    <label>TSM Name *</label>
                    <input type="text" name="tsm_name" required placeholder="Enter TSM name">
                </div>
                <div class="form-group">
                    <label>Target Contact Date</label>
                    <input type="date" name="target_contact_date">
                </div>
                <div class="form-group">
                    <label>Selected Prospects</label>
                    <div id="selected-prospects-list">
                        <p>No prospects selected</p>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn" onclick="closeModal('assign-prospects-modal')">Cancel</button>
                    <button type="submit" class="btn btn-success">Assign Prospects</button>
                </div>
            </form>
        </div>
    </div>

    <div id="log-visit-modal" class="modal">
        <div class="modal-content">
            <h3>Log Field Visit</h3>
            <form id="log-visit-form">
                <div class="form-group">
                    <label>Prospect *</label>
                    <select name="prospect_id" required>
                        <option value="">Select Prospect...</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Visit Outcome *</label>
                    <select name="visit_outcome" required>
                        <option value="completed">Completed - Met Decision Maker</option>
                        <option value="gatekeeper">Spoke with Gatekeeper</option>
                        <option value="not_available">Decision Maker Not Available</option>
                        <option value="interested">Showed Interest</option>
                        <option value="not_interested">Not Interested</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Visit Notes *</label>
                    <textarea name="visit_notes" required></textarea>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn" onclick="closeModal('log-visit-modal')">Cancel</button>
                    <button type="submit" class="btn btn-success">Log Visit</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        const apiBase = window.location.origin;
        let currentProspects = [];
        let selectedProspects = [];

        function showSection(sectionName) {
            document.querySelectorAll('.content-section').forEach(s => s.classList.add('hidden'));
            document.getElementById(sectionName + '-section').classList.remove('hidden');
            
            document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
            event.target.classList.add('active');
            
            if (sectionName === 'dashboard') loadDashboard();
            if (sectionName === 'prospects') loadProspects();
        }

        function openModal(modalId) {
            document.getElementById(modalId).classList.add('active');
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.remove('active');
        }

        async function loadDashboard() {
            try {
                const response = await fetch(`${apiBase}/dashboard/field-sales-stats`);
                const stats = await response.json();
                
                document.getElementById('total-prospects').textContent = stats.total_prospects;
                document.getElementById('assigned-prospects').textContent = stats.assigned_prospects;
                document.getElementById('contact-rate').textContent = stats.contact_rate + '%';
                document.getElementById('accounts-opened').textContent = stats.accounts_opened;
                
                displayTSMPerformance(stats.tsm_performance);
            } catch (error) {
                console.error('Error loading dashboard:', error);
            }
        }

        function displayTSMPerformance(tsmData) {
            const container = document.getElementById('tsm-performance-summary');
            if (tsmData.length === 0) {
                container.innerHTML = '<p style="padding: 20px;">No TSM data available</p>';
                return;
            }
            
            const html = tsmData.map(tsm => `
                <div class="tsm-card">
                    <strong>${tsm.assigned_tsm}</strong> - 
                    ${tsm.assigned_count} assigned, 
                    ${tsm.contacted_count} contacted, 
                    ${tsm.accounts_opened} accounts opened
                </div>
            `).join('');
            
            container.innerHTML = html;
        }

        async function loadProspects() {
            try {
                const response = await fetch(`${apiBase}/prospects`);
                currentProspects = await response.json();
                displayProspects(currentProspects);
            } catch (error) {
                console.error('Error loading prospects:', error);
            }
        }

        function displayProspects(prospects) {
            const tbody = document.getElementById('prospects-tbody');
            
            const html = prospects.map(prospect => `
                <tr>
                    <td><input type="checkbox" name="prospect-select" value="${prospect.id}" onchange="updateSelectedProspects()"></td>
                    <td><strong>${prospect.business_name}</strong></td>
                    <td>${prospect.city}, ${prospect.state}</td>
                    <td>${prospect.category}</td>
                    <td><span class="status-badge status-${prospect.prospect_status.replace('_', '-')}">${prospect.prospect_status.replace('_', ' ')}</span></td>
                    <td>${prospect.assigned_tsm || 'Unassigned'}</td>
                    <td><button class="btn" onclick="viewProspect(${prospect.id})">View</button></td>
                </tr>
            `).join('');
            
            tbody.innerHTML = html;
        }

        function filterProspects() {
            const status = document.getElementById('status-filter').value;
            const search = document.getElementById('search-prospects').value.toLowerCase();
            
            let filtered = currentProspects;
            
            if (status) {
                filtered = filtered.filter(p => p.prospect_status === status);
            }
            
            if (search) {
                filtered = filtered.filter(p => 
                    p.business_name.toLowerCase().includes(search)
                );
            }
            
            displayProspects(filtered);
        }

        function toggleAllProspects() {
            const selectAll = document.getElementById('select-all-prospects');
            const checkboxes = document.querySelectorAll('input[name="prospect-select"]');
            
            checkboxes.forEach(checkbox => {
                checkbox.checked = selectAll.checked;
            });
            
            updateSelectedProspects();
        }

        function updateSelectedProspects() {
            const checkboxes = document.querySelectorAll('input[name="prospect-select"]:checked');
            selectedProspects = Array.from(checkboxes).map(cb => parseInt(cb.value));
            
            const container = document.getElementById('selected-prospects-list');
            if (selectedProspects.length === 0) {
                container.innerHTML = '<p>No prospects selected</p>';
            } else {
                container.innerHTML = `<p><strong>${selectedProspects.length} prospects selected</strong></p>`;
            }
        }

        // Form handlers
        document.getElementById('add-prospect-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const prospectData = {};
            
            for (let [key, value] of formData.entries()) {
                if (value.trim()) {
                    prospectData[key] = value.trim();
                }
            }
            
            try {
                const response = await fetch(`${apiBase}/prospects`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(prospectData)
                });
                
                if (response.ok) {
                    closeModal('add-prospect-modal');
                    e.target.reset();
                    loadProspects();
                    alert('Prospect added successfully!');
                }
            } catch (error) {
                alert('Error adding prospect');
            }
        });

        document.getElementById('assign-prospects-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (selectedProspects.length === 0) {
                alert('Please select prospects to assign');
                return;
            }
            
            const formData = new FormData(e.target);
            const assignmentData = {
                tsm_name: formData.get('tsm_name'),
                prospect_ids: selectedProspects,
                target_contact_date: formData.get('target_contact_date') || null
            };
            
            try {
                const response = await fetch(`${apiBase}/prospects/assign-tsm`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(assignmentData)
                });
                
                if (response.ok) {
                    closeModal('assign-prospects-modal');
                    e.target.reset();
                    selectedProspects = [];
                    loadProspects();
                    alert('Prospects assigned successfully!');
                }
            } catch (error) {
                alert('Error assigning prospects');
            }
        });

        function refreshDashboard() {
            loadDashboard();
        }

        function viewProspect(id) {
            alert(`View prospect ${id} details`);
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            loadDashboard();
        });

        // Close modals when clicking outside
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.classList.remove('active');
            }
        });
    </script>
</body>
</html>
